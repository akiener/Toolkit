<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="cms.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>123, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAAwAAAASAAAAEAAAAAkAAAACAAAAAAAAAAAAAAABAAAABgAAAA8BAQATAAAADwAA
        AAYAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAALAAAAJAAAADYAAAAyAAAAGwEBAAYAAAAAAAAAAAAAAAEAAAARAAAALAAA
        ADkAAAAuAAAAFAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxGPDfVSD86/0lAOv86My5+AAAACwAAAAAAAAAAAAAAATEr
        JzJJQDn/SUA5/0g/Of8oIx89AAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUI5NKhIPzn/SD85/z42MZ4AAAAOAAAAAAAA
        AAAAAAAAAAAADkg/OPFJQDr/SUA5/zcxLG8AAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQDgzhklAOf9JQDr/Qzo1ygAA
        ABMAAAABAAAAAAAAAAAAAAAKRT03xUlAOv9IPzn/PDQvkAAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE7NC9TSUA6/0g/
        Of9JPzn/AAAAGQAAAAMAAAAAAAAAAAAAAAZAODOISUA6/0lAOv9EOzbKAAAAEwAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AA9JQDn/SUA5/0g/Of8oIyA9AAAABgAAAAAAAAAAAAAAAz02MWZIPzn/SD85/0c+OPIAAAAZAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAADgAA
        ABMAAAATAAAAHUQ8NtdIPzn/SUA6/zUuKnQBAQEZAAAAEwAAABMAAAAUJiEeP0g/Of9JQDn/SD85/yMf
        HEYBAQEXAAAAEwAAABMAAAARAAAACQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEB
        AQ4AAAArAAAAOgAAADoAAAA9PTYxtEg/Of9JQDn/ODAsmwAAADwBAQA6AAAAOgEBADoCAQE+SD8480lA
        Of9IPzn/LyomgQAAADsBAQA6AAAAOgAAADIAAAAcAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADkg/Ov9IPzn/SEA5/0hAOf9JPzr/SD85/0k/Of9JQDr/SD85/0lAOf9IPzn/ST86/0g/
        Of9JQDr/SD85/0g/Of9IPzn/SD85/0k/Of9IQDn/SD85/0A4MoYAAAAHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAFSD85/0g/Of9JPzn/SD85/0lAOv9JQDr/SD85/0lAOv9JQDn/SD85/0g/
        Ov9IPzn/SD86/0lAOf9IQDn/SUA5/0g/Of9IPzr/SUA6/0g/Of9JQDr/RT03fAAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkc+OPFIPzr/SD85/zQt
        KF8AAAAJAAAAAAAAAAAAAAABPDUwU0g/Of9IPzn/ST85/wAAABsBAQEEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKRT03xUg/
        Of9JQDn/PDUwjgAAAAwAAAAAAAAAAAAAAAAAAAAPST85/0lAOv9JQDr/MColTgIBAQcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAZAODOIST85/0g/Of9AODOtAAAADwAAAAAAAAAAAAAAAAAAAAxFPDfVSEA5/0lAOf86My1+AAAACwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAA
        ABIAAAATAAAAFjcwK3BJQDr/SUA5/0Q8NtgAAAAhAAAAEwAAABMAAAATAAAAG0A4M6xJPzn/SD85/z02
        MKEAAAAdAAAAEwEBARMAAAASAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAsAAAAkAAAANgAAADoAAAA6GxgWWUlAOf9JQDn/SD85/wEBAD8AAAA6AAAAOgAAADoAAAA8NzAsm0lA
        Ov9IPzn/QTk0zgAAAD0AAAA6AAAAOgAAADYAAAAkAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAC0U9N8VJQDr/SD86/0g/Of9JPzn/SUA5/0lAOf9JQDr/SD86/0g/Of9IPzn/SD85/0lA
        Of9IPzn/SD85/0g/Of9JQDr/SUA6/0g/Ov9IPzn/SD85/0Q8NsUAAAALAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAERz44vklAOf9IPzn/ST85/0k/Of9IPzn/SUA6/0g/Of9JQDr/SUA6/0lA
        Of9JPzn/SUA6/0lAOv9IPzn/SD85/0lAOv9IPzn/SUA5/0g/Of9IQDn/SD84vgEBAQQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkA4M4hJQDr/SUA5/0E5
        NK0AAAAPAAAAAAAAAAAAAAAAAAAAC0Q8N8ZIQDn/SUA5/z01L40AAAALAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEPTYxZklA
        Ov9IPzn/RDw21wAAABQAAAABAAAAAAAAAAAAAAAIQDgzmUlAOf9IPzn/PjYwngEBAA4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAE4MStDSUA6/0g/Of9JQDr/AAAAGgAAAAQAAAAAAAAAAAAAAAVBOTOHSUA6/0lAOf9DOzbJAAAAEgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABBJPzn/SD85/0g/Of8wKiZNAAAABgAAAAAAAAAAAAAAAjszL1VIPzn/SUA5/0g/
        OfIAAAAXAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADEU8N9VIPzn/SUA5/zkyLW4AAAAJAAAAAAAAAAAAAAAAJCAdIklA
        Ov9JQDn/SD85/xsYFS0AAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJRDw2tkg/Of9JQDr/PDQujwAAAA0AAAAAAAAAAAAA
        AAAAAAAOSD448Uk/Of9JQDn/MywpXgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVCOjSESUA6/0k/Of9EOzW2AAAACwAA
        AAAAAAAAAAAAAAAAAAlFPTbEST85/0lAOv9AOTOGAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUM7NUlJQDr/SUA5/0c/
        Od8AAAAEAAAAAAAAAAAAAAAAAAAAA0Y+N41JPzn/SUA6/0U9No0AAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////wMB//8DAf//AwH//wO
        B//8Bgf//AYD//4GA//gAAAf4AAAH+AAAB/gAAAf/wMB//8Dgf//A4H/8AAAD/AAAA/wAAAP8AAAD/+B
        wP//gMD//4DA///AwH//wOB//8Dgf//A4H//wOB/////////////////KAAAABAAAAAgAAAAAQAgAAAA
        AABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdUUmYXVFJ/11RSXoAAAAAAAAAAF1R
        SZhdUUn/XVFJegAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXVFJXl1RSf9dUUmtAAAAAAAA
        AABdUUleXVFJ/11RSa0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1RSR9dUUn/XVFJ4wAA
        AAAAAAAAXVFJH11RSf9dUUnjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXVFJM11RSTNdUUk4XVFJ/11R
        SfpdUUkzXVFJM11RSThdUUn/XVFJ+l1RSTNdUUkzXVFJM11RSTMAAAAAAAAAAF1RSf9dUUn/XVFJ/11R
        Sf9dUUn/XVFJ/11RSf9dUUn/XVFJ/11RSf9dUUn/XVFJ/11RSf9dUUn/AAAAAAAAAAAAAAAAAAAAAAAA
        AABdUUniXVFJ/11RSSMAAAAAAAAAAF1RSeJdUUn/XVFJIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAXVFJpF1RSf9dUUliAAAAAAAAAABdUUmkXVFJ/11RSWIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAF1RSWddUUn/XVFJowAAAAAAAAAAXVFJZ11RSf9dUUmjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAXVFJM11RSTNdUUlUXVFJ/11RSeFdUUkzXVFJM11RSVRdUUn/XVFJ4V1RSTNdUUkzXVFJM11R
        STMAAAAAAAAAAF1RSf9dUUn/XVFJ/11RSf9dUUn/XVFJ/11RSf9dUUn/XVFJ/11RSf9dUUn/XVFJ/11R
        Sf9dUUn/AAAAAAAAAAAAAAAAAAAAAAAAAABdUUn8XVFJ/11RSQUAAAAAAAAAAF1RSfxdUUn/XVFJBQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXVFJ7F1RSf9dUUkfAAAAAAAAAABdUUnsXVFJ/11R
        SR8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1RSbVdUUn/XVFJTwAAAAAAAAAAXVFJtV1R
        Sf9dUUlPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdUUmGXVFJ/11RSaAAAAAAAAAAAF1R
        SYZdUUn/XVFJoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA4x8AAOMfAADjHwAAgAEAAIABAADxjwAA8Y8AAPGP
        AADAAAAAwAAAAPjHAAD4xwAA+McAAPjHAAD//wAA
</value>
  </data>
</root>